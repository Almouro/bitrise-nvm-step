format_version: 4
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

workflows:
  test:
    steps:
    # - change-workdir:
    #     title: Switch working dir to test / _tmp dir
    #     description: |-
    #       To prevent step testing issues, like referencing relative
    #       files with just './some-file' in the step's code, which would
    #       work for testing the step from this directory directly
    #       but would break if the step is included in another `bitrise.yml`.
    #     run_if: true
    #     inputs:
    #     - path: ./_tmp
    #     - is_create_path: true
    - script@1.1.5:
        title: Add .nvmrc
        inputs:
        - content: "rm -f ./.nvmrc && echo 'v14' > ./.nvmrc"
    - path::./:
        title: Run step

    - path::./:
        title: Step Test
        inputs:
        - nvm_version: 0.35.2
        - node_version: 12.16.2
    - script@1.1.5:
        title: Assert node version
        inputs:
        - content: "[ $(node --version) == 'v12.16.2' ]"
    - script@1.1.5:
        title: Install global module
        inputs:
        - content: |-
            npm --version
            npm install -g mocha
    - script@1.1.5:
        title: Check global module is available
        inputs:
        - content: mocha --help

    - script@1.1.5:
        title: Add .nvmrc
        inputs:
        - content: "rm -f ./.nvmrc && echo '7.7.2' > ./.nvmrc"
    - path::./:
        title: Run step
    - script@1.1.5:
        title: Assert .nvmrc is honored if node version input is not passed
        inputs:
        - content: "node --version && [ $(node --version) == 'v7.7.2' ]"

    - script@1.1.5:
        title: Remove .nvmrc
        inputs:
        - content: "rm -f ./.nvmrc"
    - path::./:
        title: Run step
    - script@1.1.5:
        title: Assert node is installed if node version input is not passed and no .nvmrc is found
        inputs:
    # This is the latest version at the moment
        - content: "node --version && [ $(node --version) == 'v18.6.0' ]"

    - script@1.1.5:
        title: Add .nvmrc to test subfolder
        inputs:
        - content: "mkdir -p test && rm -f ./test/.nvmrc && echo '8.0.0' > ./test/.nvmrc"
    - path::./:
        title: Run step
        inputs:
        - working_dir: ./test
    - script@1.1.5:
        title: Assert .nvmrc is honored if it is in the working dir
        inputs:
        - content: "node --version && [ $(node --version) == 'v8.0.0' ]"


    - script@1.1.5:
        title: Add env variables NVM_VERSION and NODE_VERSION
        inputs:
        - content: |-
            envman add --key NVM_VERSION --value 0.35.1
            envman add --key NODE_VERSION --value 5.0.0
    - path::./:
        title: Step Test
        inputs:
        - nvm_version: "$NVM_VERSION"
        - node_version: "$NODE_VERSION"
    - script@1.1.5:
        title: Assert node version is passed from environment variables
        inputs:
        - content: "[ $(node --version) == 'v5.0.0' ]"


  # ----------------------------------------------------------------
  # --- workflows to Share this step into a Step Library
  audit-this-step:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            stepman audit --step-yml ./step.yml
  share-this-step:
    envs:
      # if you want to share this step into a StepLib
      - MY_STEPLIB_REPO_FORK_GIT_URL:
      - STEP_ID_IN_STEPLIB:
      - STEP_GIT_VERION_TAG_TO_SHARE:
      - STEP_GIT_CLONE_URL:
    description: |-
      If this is the first time you try to share a Step you should
      first call: $ bitrise share
      This will print you a guide, and information about how Step sharing
      works. Please read it at least once!
      As noted in the Step sharing guide you'll have to fork the
      StepLib you want to share this step into. Once you're done with forking
      the repository you should set your own fork's git clone URL
      in the `.bitrise.secrets.yml` file, or here in the `envs` section,
      as the value of the `MY_STEPLIB_REPO_FORK_GIT_URL` environment.
      You're now ready to share this Step, just make sure that
      the `STEP_ID_IN_STEPLIB` and `STEP_GIT_VERION_TAG_TO_SHARE`
      environments are set to the desired values!
      To share this Step into a StepLib you can just run: $ bitrise run share-this-step
      Once it finishes the only thing left is to actually create a Pull Request,
      the way described in the guide printed at the end of the process.
    before_run:
    - audit-this-step
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            bitrise share start -c ${MY_STEPLIB_REPO_FORK_GIT_URL}
            bitrise share create --stepid ${STEP_ID_IN_STEPLIB} --tag ${STEP_GIT_VERION_TAG_TO_SHARE} --git ${STEP_GIT_CLONE_URL}
            bitrise share finish
